Leetcode problem link: https://leetcode.com/problems/merge-two-sorted-lists/

Solution:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* temp;
        if(l1==NULL && l2==NULL){
            return l1;
        }
        if(l1!=NULL && l2!=NULL && l1->val<l2->val)
        {
            temp=l1;
            l1=l1->next;
        }
        else if(l1!=NULL && l2!=NULL && l1->val>=l2->val)
        {
            temp=l2;
            l2=l2->next;
        }
        else if(l1==NULL && l2!=NULL){
            
            temp=l2;
            l2=l2->next;
        }
        else if(l2==NULL && l1!=NULL){
            temp=l1;
            l1=l1->next;
        }
        ListNode* head=temp; 
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->val<l2->val)
            {
                temp->next=l1;
                l1=l1->next;
            }
            else 
            {
                temp->next=l2;
                l2=l2->next;
            }
            temp=temp->next;
        }
        if(l1!=NULL)
        {
            temp->next=l1;
        }
        if(l2!=NULL)
        {
            temp->next=l2;
        }
        return head;
    }
};
