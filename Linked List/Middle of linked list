Leetcode problem link: https://leetcode.com/problems/middle-of-the-linked-list/

Solution:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* temp=head;
        ListNode* temp2=head;
        int c=0;
        while(temp->next!=NULL){
            c+=1;
            temp=temp->next;
        }
        cout<<c;
        if(c%2==0){
           for(int i=0;i<c/2;i++){
            temp2=temp2->next;
        } 
            return temp2;
        }
        for(int i=0;i<=c/2;i++){
            temp2=temp2->next;
        }
        return temp2;
    }
};
